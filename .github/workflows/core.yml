name: Core

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_BASEDIR: "${{ github.workspace }}"

    steps:
      - name: Checkout LSPosed
        uses: actions/checkout@v3
        with:
          repository: LSPosed/LSPosed
          submodules: "recursive"
          fetch-depth: 0

      - name: Checkout FuckLSPosed
        uses: actions/checkout@v3
        with:
          path: FuckLSPosed

      - name: Checkout libxposed/api
        uses: actions/checkout@v3
        with:
          repository: libxposed/api
          path: libxposed/api

      - name: Checkout libxposed/service
        uses: actions/checkout@v3
        with:
          repository: libxposed/service
          path: libxposed/service

      - name: Verify and Apply Diff
        run: |
          git apply FuckLSPosed/patch.diff || { echo "Error: Unable to apply diff"; exit 1; }

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
          key: ${{ runner.os }}
          restore-keys: ${{ runner.os }}

      - name: Build dependencies
        working-directory: libxposed
        run: |
          echo 'org.gradle.caching=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.parallel=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8 -XX:+UseParallelGC' >> ~/.gradle/gradle.properties
          echo 'android.native.buildOutput=verbose' >> ~/.gradle/gradle.properties
          cd api
          ./gradlew publishToMavenLocal
          cd ../service
          ./gradlew publishToMavenLocal

      - name: Build with Gradle
        run: |
          ./gradlew zipAll

      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          riruReleaseName=`ls magisk-loader/release/LSPosed-v*-riru-release.zip | awk -F '(/|.zip)' '{print $3}'` && echo "riruReleaseName=$riruReleaseName" >> $GITHUB_OUTPUT
          riruDebugName=`ls magisk-loader/release/LSPosed-v*-riru-debug.zip | awk -F '(/|.zip)' '{print $3}'` && echo "riruDebugName=$riruDebugName" >> $GITHUB_OUTPUT
          zygiskReleaseName=`ls magisk-loader/release/LSPosed-v*-zygisk-release.zip | awk -F '(/|.zip)' '{print $3}'` && echo "zygiskReleaseName=$zygiskReleaseName" >> $GITHUB_OUTPUT
          zygiskDebugName=`ls magisk-loader/release/LSPosed-v*-zygisk-debug.zip | awk -F '(/|.zip)' '{print $3}'` && echo "zygiskDebugName=$zygiskDebugName" >> $GITHUB_OUTPUT
          unzip magisk-loader/release/LSPosed-v*-riru-release.zip -d LSPosed-riru-release
          unzip magisk-loader/release/LSPosed-v*-riru-debug.zip -d LSPosed-riru-debug
          unzip magisk-loader/release/LSPosed-v*-zygisk-release.zip -d LSPosed-zygisk-release
          unzip magisk-loader/release/LSPosed-v*-zygisk-debug.zip -d LSPosed-zygisk-debug

      - name: Upload riru release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.riruReleaseName }}
          path: "./LSPosed-riru-release/*"

      - name: Upload riru debug
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.riruDebugName }}
          path: "./LSPosed-riru-debug/*"

      - name: Upload zygisk release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskReleaseName }}
          path: "./LSPosed-zygisk-release/*"

      - name: Upload zygisk debug
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskDebugName }}
          path: "./LSPosed-zygisk-debug/*"

      - name: Upload mappings
        uses: actions/upload-artifact@v3
        with:
          name: mappings
          path: |
            magisk-loader/build/outputs/mapping
            app/build/outputs/mapping

      - name: Upload symbols
        uses: actions/upload-artifact@v3
        with:
          name: symbols
          path: build/symbols
